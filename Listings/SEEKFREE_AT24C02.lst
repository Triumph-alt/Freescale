C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   29/01/25  17:41:52  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SEEKFREE_AT24C02
OBJECT MODULE PLACED IN .\Objects\SEEKFREE_AT24C02.obj
COMPILER INVOKED BY: D:\keil5\C251\BIN\C251.EXE seekfree_peripheral\SEEKFREE_AT24C02.c XSMALL INTR2 BROWSE INCDIR(.\user
                    -;.\libraries;.\seekfree_components;.\seekfree_libraries;.\seekfree_peripheral) DEBUG PRINT(.\Listings\SEEKFREE_AT24C02.l
                    -st) OBJECT(.\Objects\SEEKFREE_AT24C02.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2018,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file                AT24C02
   11           * @company                     成都逐飞科技有限公司
   12           * @author              逐飞科技(QQ3184284598)
   13           * @version             查看doc内version文件 版本说明
   14           * @Software            MDK FOR C251 V5.60
   15           * @Target core         STC32G12K128
   16           * @Taobao              https://seekfree.taobao.com/
   17           * @date                2019-04-30
   18           * @note                    
   19                                                  接线定义：
   20                                                  ------------------------------------ 
   21                                                  蓝牙转串口      单片机                        
   22                                                  SCL             查看 SEEKFREE_AT24C02.h文件中的 AT24C02_SCL_PIN 宏定义
   23                                                  SDA             查看 SEEKFREE_AT24C02.h文件中的 AT24C02_SDA_PIN 宏定义
   24                                                  ------------------------------------ 
   25           ********************************************************************************************************
             -************/
   26          #include "zf_delay.h"
   27          
   28          #include "SEEKFREE_AT24C02.h"
   29          
   30          #pragma warning disable = 173
   31          
   32          
   33          #define GET_AT24C02_SDA                                 AT24C02_SDA_PIN
   34          #define AT24C02_SCL_LOW()               AT24C02_SCL_PIN = 0             //IO口输出低电平
   35          #define AT24C02_SCL_HIGH()              AT24C02_SCL_PIN = 1             //IO口输出高电平
   36          #define AT24C02_SDA_LOW()               AT24C02_SDA_PIN = 0             //IO口输出低电平
   37          #define AT24C02_SDA_HIGH()              AT24C02_SDA_PIN = 1             //IO口输出高电平
   38          
   39          
   40          #define ack 1      //主应答
   41          #define no_ack 0   //从应答     
   42          
   43          //-------------------------------------------------------------------------------------------------------
             -------------
   44          //  @brief      模拟IIC延时
   45          //  @return     void                                            
   46          //  @since      v1.0
   47          //  Sample usage:                               如果IIC通讯失败可以尝试增加j的值
   48          //-------------------------------------------------------------------------------------------------------
             -------------
   49          static void at24c02_simiic_delay(void)
   50          {
   51   1          uint16 j=AT24C02_SOFT_IIC_DELAY;   
   52   1              while(j--);
   53   1      }
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   29/01/25  17:41:52  PAGE 2   

   54          
   55          //内部使用，用户无需调用
   56          static void at24c02_simiic_start(void)
   57          {
   58   1              AT24C02_SDA_HIGH();
   59   1              AT24C02_SCL_HIGH();
   60   1              at24c02_simiic_delay();
   61   1              AT24C02_SDA_LOW();
   62   1              at24c02_simiic_delay();
   63   1              AT24C02_SCL_LOW();
   64   1      }
   65          
   66          //内部使用，用户无需调用
   67          static void at24c02_simiic_stop(void)
   68          {
   69   1              AT24C02_SDA_LOW();
   70   1              AT24C02_SCL_LOW();
   71   1              at24c02_simiic_delay();
   72   1              AT24C02_SCL_HIGH();
   73   1              at24c02_simiic_delay();
   74   1              AT24C02_SDA_HIGH();
   75   1              at24c02_simiic_delay();
   76   1      }
   77          
   78          //主应答(包含ack:SDA=0和no_ack:SDA=0)
   79          //内部使用，用户无需调用
   80          static void at24c02_simiic_sendack(unsigned char ack_dat)
   81          {
   82   1          AT24C02_SCL_LOW();
   83   1              at24c02_simiic_delay();
   84   1              if(ack_dat) AT24C02_SDA_LOW();
   85   1          else        AT24C02_SDA_HIGH();
   86   1      
   87   1          AT24C02_SCL_HIGH();
   88   1          at24c02_simiic_delay();
   89   1          AT24C02_SCL_LOW();
   90   1          at24c02_simiic_delay();
   91   1      }
   92          
   93          
   94          static int at24c02_sccb_waitack(void)
   95          {
   96   1          AT24C02_SCL_LOW();
   97   1      
   98   1              at24c02_simiic_delay();
   99   1              
  100   1              AT24C02_SCL_HIGH();
  101   1          at24c02_simiic_delay();
  102   1              
  103   1          if(GET_AT24C02_SDA)           //应答为高电平，异常，通信失败
  104   1          {
  105   2      
  106   2              AT24C02_SCL_LOW();
  107   2              return 0;
  108   2          }
  109   1      
  110   1          AT24C02_SCL_LOW();
  111   1              at24c02_simiic_delay();
  112   1          return 1;
  113   1      }
  114          
  115          //字节发送程序
  116          //发送c(可以是数据也可是地址)，送完后接收从应答
  117          //不考虑从应答位
  118          //内部使用，用户无需调用
  119          static void at24c02_send_ch(uint8 c)
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   29/01/25  17:41:52  PAGE 3   

  120          {
  121   1              uint8 i = 8;
  122   1          while(i--)
  123   1          {
  124   2              if(c & 0x80)    AT24C02_SDA_HIGH();//SDA 输出数据
  125   2              else                    AT24C02_SDA_LOW();
  126   2              c <<= 1;
  127   2              at24c02_simiic_delay();
  128   2              AT24C02_SCL_HIGH();                //SCL 拉高，采集信号
  129   2              at24c02_simiic_delay();
  130   2              AT24C02_SCL_LOW();                //SCL 时钟线拉低
  131   2          }
  132   1              at24c02_sccb_waitack();
  133   1      }
  134          
  135          
  136          //字节接收程序
  137          //接收器件传来的数据，此程序应配合|主应答函数|使用
  138          //内部使用，用户无需调用
  139          static uint8 at24c02_read_ch(uint8 ack_x)
  140          {
  141   1          uint8 i;
  142   1          uint8 c;
  143   1          c=0;
  144   1          AT24C02_SCL_LOW();
  145   1          at24c02_simiic_delay();
  146   1          AT24C02_SDA_HIGH();             
  147   1      
  148   1          for(i=0;i<8;i++)
  149   1          {
  150   2              at24c02_simiic_delay();
  151   2              AT24C02_SCL_LOW();         //置时钟线为低，准备接收数据位
  152   2              at24c02_simiic_delay();
  153   2              AT24C02_SCL_HIGH();         //置时钟线为高，使数据线上数据有效
  154   2              at24c02_simiic_delay();
  155   2              c<<=1;
  156   2              if(GET_AT24C02_SDA) 
  157   2              {
  158   3                  c+=1;   //读数据位，将接收的数据存c
  159   3              }
  160   2          }
  161   1      
  162   1              AT24C02_SCL_LOW();
  163   1              at24c02_simiic_delay();
  164   1              at24c02_simiic_sendack(ack_x);
  165   1              
  166   1          return c;
  167   1      }
  168          
  169          
  170          //-------------------------------------------------------------------------------------------------------
             -------------
  171          //  @brief      模拟IIC写数据到设备寄存器函数
  172          //  @param      dev_add                 设备地址(低七位地址)
  173          //  @param      reg                             寄存器地址
  174          //  @param      dat                             写入的数据
  175          //  @return     void                                            
  176          //  @since      v1.0
  177          //  Sample usage:                               
  178          //-------------------------------------------------------------------------------------------------------
             -------------
  179          static void at24c02_simiic_write_reg(uint8 dev_add, uint8 reg, uint8 dat)
  180          {
  181   1              at24c02_simiic_start();
  182   1          at24c02_send_ch( (dev_add<<1) | 0x00);   //发送器件地址加写位
  183   1              at24c02_send_ch( reg );                                  //发送从机寄存器地址
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   29/01/25  17:41:52  PAGE 4   

  184   1              at24c02_send_ch( dat );                                  //发送需要写入的数据
  185   1              at24c02_simiic_stop();
  186   1      }
  187          
  188          //-------------------------------------------------------------------------------------------------------
             -------------
  189          //  @brief      模拟IIC写数据到设备寄存器函数
  190          //  @param      dev_add                 设备地址(低七位地址)
  191          //  @param      reg                             寄存器地址
  192          //  @param      dat                             写入的数据
  193          //  @return     void                                            
  194          //  @since      v1.0
  195          //  Sample usage:                               
  196          //-------------------------------------------------------------------------------------------------------
             -------------
  197          //static void at24c02_simiic_write_regs(uint8 dev_add, uint8 reg, uint8 *dat, uint32 len)
  198          //{
  199          //      uint16 i = 0;
  200          //      at24c02_simiic_start();
  201          //    at24c02_send_ch( (dev_add<<1) | 0x00);   //发送器件地址加写位
  202          //      at24c02_send_ch( reg );                                  //发送从机寄存器地址
  203          
  204          //      while(len--)
  205          //      {
  206          //              at24c02_send_ch( *dat++ );                               //发送需要写入的数据
  207          //      }
  208          
  209          //      
  210          //      at24c02_simiic_stop();
  211          //}
  212          //-------------------------------------------------------------------------------------------------------
             -------------
  213          //  @brief      模拟IIC从设备寄存器读取数据
  214          //  @param      dev_add                 设备地址(低七位地址)
  215          //  @param      reg                             寄存器地址
  216          //  @param      type                    选择通信方式是IIC  还是 SCCB
  217          //  @return     uint8                   返回寄存器的数据                        
  218          //  @since      v1.0
  219          //  Sample usage:                               
  220          //-------------------------------------------------------------------------------------------------------
             -------------
  221          static uint8 at24c02_simiic_read_reg(uint8 dev_add, uint8 reg)
  222          {
  223   1              uint8 dat;
  224   1              at24c02_simiic_start();
  225   1          at24c02_send_ch( (dev_add<<1) | 0x00);  //发送器件地址加写位
  226   1              at24c02_send_ch( reg );                                 //发送从机寄存器地址
  227   1              
  228   1              at24c02_simiic_start();
  229   1              at24c02_send_ch( (dev_add<<1) | 0x01);  //发送器件地址加读位
  230   1              dat = at24c02_read_ch(no_ack);                                  //读取数据
  231   1              at24c02_simiic_stop();
  232   1              
  233   1              return dat;
  234   1      }
  235          
  236          //-------------------------------------------------------------------------------------------------------
             -------------
  237          //  @brief      模拟IIC读取多字节数据
  238          //  @param      dev_add                 设备地址(低七位地址)
  239          //  @param      reg                             寄存器地址
  240          //  @param      dat_add                 数据保存的地址指针
  241          //  @param      num                             读取字节数量
  242          //  @param      type                    选择通信方式是IIC  还是 SCCB
  243          //  @return     uint8                   返回寄存器的数据                        
  244          //  @since      v1.0
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   29/01/25  17:41:52  PAGE 5   

  245          //  Sample usage:                               
  246          //-------------------------------------------------------------------------------------------------------
             -------------
  247          //static void at24c02_simiic_read_regs(uint8 dev_add, uint8 reg, uint8 *dat_add, uint32 num)
  248          //{
  249          //      at24c02_simiic_start();
  250          //    at24c02_send_ch( (dev_add<<1) | 0x00);  //发送器件地址加写位
  251          //      at24c02_send_ch( reg );                                 //发送从机寄存器地址
  252          //      
  253          //      at24c02_simiic_start();
  254          //      at24c02_send_ch( (dev_add<<1) | 0x01);  //发送器件地址加读位
  255          //    while(--num)
  256          //    {
  257          //        *dat_add = at24c02_read_ch(ack); //读取数据
  258          //        dat_add++;
  259          //    }
  260          //    *dat_add = at24c02_read_ch(no_ack); //读取数据
  261          //      at24c02_simiic_stop();
  262          //}
  263          
  264          
  265          
  266          //-------------------------------------------------------------------------------------------------------
             -------------
  267          //  @brief      at24c02写一个字节
  268          //  @param      byte_reg        at24c02地址(0-255)
  269          //  @param      dat                     需要写入的数据
  270          //  @return     void                                    
  271          //  @since      v1.0
  272          //  Sample usage:       
  273          //  @note       
  274          //-------------------------------------------------------------------------------------------------------
             -------------
  275          void at24c02_write_byte(uint8 byte_reg, uint8 dat)
  276          {
  277   1              delay_ms(6);
  278   1              at24c02_simiic_write_reg(AT24C02_DEV_ADDR, byte_reg, dat);
  279   1      }
  280          
  281          //-------------------------------------------------------------------------------------------------------
             -------------
  282          //  @brief      at24c02读一个字节
  283          //  @param      byte_reg        at24c02地址(0-255)
  284          //  @return     uint8           返回读取到的字节数                                      
  285          //  @since      v1.0
  286          //  Sample usage:       
  287          //  @note       
  288          //-------------------------------------------------------------------------------------------------------
             -------------
  289          uint8 at24c02_read_byte(uint8 byte_reg)
  290          {
  291   1              delay_ms(6);
  292   1              return at24c02_simiic_read_reg(AT24C02_DEV_ADDR, byte_reg);
  293   1      }
  294          
  295          //-------------------------------------------------------------------------------------------------------
             -------------
  296          //  @brief      at24c02写多个字节
  297          //  @param      byte_reg        at24c02起始地址(0-255)
  298          //  @param      dat_add         需要写入的数据指针
  299          //  @param      num                     需要写入多少个数据
  300          //  @return     void                                    
  301          //  @since      v1.0
  302          //  Sample usage:       
  303          //  @note       
  304          //-------------------------------------------------------------------------------------------------------
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   29/01/25  17:41:52  PAGE 6   

             -------------
  305          void at24c02_write_bytes(uint8 byte_reg, uint8 *dat_add, uint8 num)
  306          {
  307   1              delay_ms(6);
  308   1              at24c02_simiic_start();
  309   1          at24c02_send_ch( (AT24C02_DEV_ADDR<<1) | 0x00);
  310   1              at24c02_send_ch( byte_reg );                            
  311   1      
  312   1          while(--num)
  313   1          {
  314   2                      at24c02_send_ch( *dat_add++ );                                  
  315   2                      byte_reg++;
  316   2                      if((byte_reg % 8) == 0)
  317   2                      {
  318   3                              at24c02_simiic_stop();
  319   3                              delay_ms(6);
  320   3                              at24c02_simiic_start();
  321   3                              at24c02_send_ch( (AT24C02_DEV_ADDR<<1) | 0x00);
  322   3                              at24c02_send_ch( byte_reg );                            
  323   3                      }
  324   2          }
  325   1              at24c02_send_ch( *dat_add++ );   
  326   1              at24c02_simiic_stop();
  327   1      }
  328          
  329          //-------------------------------------------------------------------------------------------------------
             -------------
  330          //  @brief      at24c02读多个字节
  331          //  @param      byte_reg        at24c02起始地址(0-255)
  332          //  @param      dat_add         需要读出的数据指针
  333          //  @param      num                     需要读出多少个数据
  334          //  @return     void                                    
  335          //  @since      v1.0
  336          //  Sample usage:       
  337          //  @note       
  338          //-------------------------------------------------------------------------------------------------------
             -------------
  339          void at24c02_read_bytes(uint8 byte_reg, uint8 *dat_add, uint8 num)
  340          {
  341   1              delay_ms(5);
  342   1              at24c02_simiic_start();
  343   1          at24c02_send_ch( (AT24C02_DEV_ADDR<<1) | 0x00);  //发送器件地址加写位
  344   1              at24c02_send_ch( byte_reg );                                     //发送从机寄存器地址
  345   1              delay_ms(5);
  346   1              at24c02_simiic_start();
  347   1              at24c02_send_ch( (AT24C02_DEV_ADDR<<1) | 0x01);  //发送器件地址加读位
  348   1          while(--num)
  349   1          {
  350   2              *dat_add++ = at24c02_read_ch(1); //读取数据
  351   2                      byte_reg++;
  352   2          }
  353   1              *dat_add++ = at24c02_read_ch(0); //读取数据
  354   1              at24c02_simiic_stop();
  355   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       516     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          4
  bit size             =    ------     ------
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   29/01/25  17:41:52  PAGE 7   

  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
